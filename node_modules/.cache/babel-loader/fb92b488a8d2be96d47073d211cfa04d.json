{"ast":null,"code":"import _objectSpread from\"/Users/rtrahat/Documents/BabyMoon/BabyMoonSwap/toModifydex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useContext}from'react';import{Menu as UikitMenu}from'@pancakeswap-libs/uikit';import{useWeb3React}from'@web3-react/core';import{allLanguages}from'constants/localisation/languageCodes';import{LanguageContext}from'hooks/LanguageContext';import useTheme from'hooks/useTheme';import useGetPriceData from'hooks/useGetPriceData';import useGetLocalProfile from'hooks/useGetLocalProfile';import{connectorsByName}from'connectors';import links from'./config';var Menu=function Menu(props){var _useWeb3React=useWeb3React(),account=_useWeb3React.account,activate=_useWeb3React.activate,deactivate=_useWeb3React.deactivate;var _useContext=useContext(LanguageContext),selectedLanguage=_useContext.selectedLanguage,setSelectedLanguage=_useContext.setSelectedLanguage;var _useTheme=useTheme(),isDark=_useTheme.isDark,toggleTheme=_useTheme.toggleTheme;var priceData=useGetPriceData();var cakePriceUsd=priceData?Number(priceData.prices.Cake):undefined;var profile=useGetLocalProfile();return/*#__PURE__*/_jsx(UikitMenu,_objectSpread({links:links,account:account,login:function login(connectorId){var connector=connectorsByName[connectorId];if(connector){activate(connector);}},logout:deactivate,isDark:isDark,toggleTheme:toggleTheme,currentLang:(selectedLanguage===null||selectedLanguage===void 0?void 0:selectedLanguage.code)||'',langs:allLanguages,setLang:setSelectedLanguage// cakePriceUsd={cakePriceUsd}\n// profile={profile}\n},props));};export default Menu;","map":{"version":3,"sources":["/Users/rtrahat/Documents/BabyMoon/BabyMoonSwap/toModifydex/src/components/Menu/index.tsx"],"names":["React","useContext","Menu","UikitMenu","useWeb3React","allLanguages","LanguageContext","useTheme","useGetPriceData","useGetLocalProfile","connectorsByName","links","props","account","activate","deactivate","selectedLanguage","setSelectedLanguage","isDark","toggleTheme","priceData","cakePriceUsd","Number","prices","Cake","undefined","profile","connectorId","connector","code"],"mappings":"2NAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,IAAI,GAAIC,CAAAA,SAAjB,KAAkD,yBAAlD,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,YAAT,KAA6B,sCAA7B,CACA,OAASC,eAAT,KAAgC,uBAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,MAAOC,CAAAA,eAAP,KAA4B,uBAA5B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,0BAA/B,CACA,OAASC,gBAAT,KAAiC,YAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CAEA,GAAMT,CAAAA,IAAc,CAAG,QAAjBA,CAAAA,IAAiB,CAACU,KAAD,CAAW,mBACUR,YAAY,EADtB,CACxBS,OADwB,eACxBA,OADwB,CACfC,QADe,eACfA,QADe,CACLC,UADK,eACLA,UADK,iBAEkBd,UAAU,CAACK,eAAD,CAF5B,CAExBU,gBAFwB,aAExBA,gBAFwB,CAENC,mBAFM,aAENA,mBAFM,eAGAV,QAAQ,EAHR,CAGxBW,MAHwB,WAGxBA,MAHwB,CAGhBC,WAHgB,WAGhBA,WAHgB,CAIhC,GAAMC,CAAAA,SAAS,CAAGZ,eAAe,EAAjC,CACA,GAAMa,CAAAA,YAAY,CAAGD,SAAS,CAAGE,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiBC,IAAlB,CAAT,CAAmCC,SAAjE,CACA,GAAMC,CAAAA,OAAO,CAAGjB,kBAAkB,EAAlC,CAEA,mBACE,KAAC,SAAD,gBACE,KAAK,CAAEE,KADT,CAEE,OAAO,CAAEE,OAFX,CAGE,KAAK,CAAE,eAACc,WAAD,CAAiC,CACtC,GAAMC,CAAAA,SAAS,CAAGlB,gBAAgB,CAACiB,WAAD,CAAlC,CACA,GAAIC,SAAJ,CAAe,CACbd,QAAQ,CAACc,SAAD,CAAR,CACD,CACF,CARH,CASE,MAAM,CAAEb,UATV,CAUE,MAAM,CAAEG,MAVV,CAWE,WAAW,CAAEC,WAXf,CAYE,WAAW,CAAE,CAAAH,gBAAgB,OAAhB,EAAAA,gBAAgB,SAAhB,QAAAA,gBAAgB,CAAEa,IAAlB,GAA0B,EAZzC,CAaE,KAAK,CAAExB,YAbT,CAcE,OAAO,CAAEY,mBACT;AACA;AAhBF,EAiBML,KAjBN,EADF,CAqBD,CA7BD,CA+BA,cAAeV,CAAAA,IAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { Menu as UikitMenu, ConnectorNames } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { allLanguages } from 'constants/localisation/languageCodes'\nimport { LanguageContext } from 'hooks/LanguageContext'\nimport useTheme from 'hooks/useTheme'\nimport useGetPriceData from 'hooks/useGetPriceData'\nimport useGetLocalProfile from 'hooks/useGetLocalProfile'\nimport { connectorsByName } from 'connectors'\nimport links from './config'\n\nconst Menu: React.FC = (props) => {\n  const { account, activate, deactivate } = useWeb3React()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const priceData = useGetPriceData()\n  const cakePriceUsd = priceData ? Number(priceData.prices.Cake) : undefined\n  const profile = useGetLocalProfile()\n\n  return (\n    <UikitMenu\n      links={links}\n      account={account as string}\n      login={(connectorId: ConnectorNames) => {\n        const connector = connectorsByName[connectorId]\n        if (connector) {\n          activate(connector)\n        }\n      }}\n      logout={deactivate}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage?.code || ''}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      // cakePriceUsd={cakePriceUsd}\n      // profile={profile}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n"]},"metadata":{},"sourceType":"module"}